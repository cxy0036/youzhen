C51 COMPILER V9.56.0.0   ADC                                                               05/03/2018 16:42:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\Objects\ADC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\ADC.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Option File) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\ADC.lst) TABS(2) OBJECT(.\Objects\ADC.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    ADC.c
   4            * @author  Captain.
   5            * @version V1.1.0
   6            * @date    2017-6-22
   7            * @brief   This file implement functions that in ADC.h define.
   8             *****************************************************************************
   9            * @attention
  10            *
  11            * <h2><center>&copy; COPYRIGHT 2017 YUJIN</center></h2>
  12            *
  13            ******************************************************************************
  14            */
  15          
  16          /* Includes ------------------------------------------------------------------*/
  17          #include "ADC.h"
  18          //#include "delay.h"
  19          //#include "stdio.h"
  20          
  21          /* Public Functions ----------------------------------------------------------*/
  22          
  23          /*
  24          ********************************************************************************
  25          *                                       ADC INITIALIZATION FUNCTIONS
  26          *
  27          * Description: This function is called by Init_Fun() in GPIO_Config.h at the beginning in main() .
  28          *
  29          * Arguments  : none
  30          *
  31          * Note(s)    : none.
  32          ********************************************************************************
  33          */
  34          void ADC_Init_Fun(void)
  35          {
  36   1        ADM = 0x02;  //stop and disable adc,channel 1;
  37   1        
  38   1        P1M &= ~0x1E;  //P11,P12,P13 input;
  39   1        P1UR &= ~0x1E;  //P11,P12,P13,14 disable pull up;
  40   1        P1CON |= 0x1E;  //disable P11,P12,P13,14 schmitt trigger
  41   1        
  42   1        VREFH = 0x07;  //Vref = VDD = 5V;
  43   1        ADR = 0x40;  //Enable AIN channel, Fadc = Fosc/16 ; T = 32us
  44   1      }
  45          
  46          /*
  47          ********************************************************************************
  48          *                                       READ ONE ADC CHANNEL VALUE FUNCTIONS
  49          *
  50          * Description: This function read one ADC channel value,return the 16 Bit converter value.
  51          *
  52          * Arguments  : wangt convert ADC channel
  53          *
  54          * Return  : Return the convert value of 16 Bit for the channel
C51 COMPILER V9.56.0.0   ADC                                                               05/03/2018 16:42:45 PAGE 2   

  55          *
  56          * Note(s)    : none.
  57          ********************************************************************************
  58          */
  59          uint16_t ADC_Read_Channel_Fun(uint8_t channel)
  60          {
  61   1        uint16_t readdata,read_arry[6];  
  62   1        uint8_t i,j;
  63   1        ADM  = channel;    /* Clean Flag, Select Channel  */
  64   1        //ADR &= ~0x40;
  65   1        //P1M &= ~channel;  //P11,P12,P14 input;
  66   1        //P1UR &= ~channel;  //P11,P12,P14 disable pull up;
  67   1        //P1CON |= channel;  //disable P11,P12,P14 schmitt trigger
  68   1        //ADR |= 0x40;
  69   1        ADM |= 0x80;    /* Enable ADC */
  70   1        for(i=0;i<5;i++)
  71   1        {   
  72   2          ADM |= 0x40;    /* Start Conversion */
  73   2          while(!(ADM & 0x20));   /* Wait Conversion Complete ,Convert 5 Times*/
  74   2          read_arry[i+1] = (uint16_t)ADB;     /* Read Data Convertsion to 16 Bit*/
  75   2          read_arry[i+1] = (read_arry[i+1] << 4) + (uint16_t)(ADR & 0x0F);
  76   2          ADM &= ~0x20;  /* Clear Complete Flag */
  77   2        }
  78   1        ADM &= ~0x80;    /* Disable ADC */
  79   1        
  80   1      /* Filter Funtion**************************************************************/
  81   1        for(i=1;i<6;i++)  /* Insert sort */
  82   1        {
  83   2          read_arry[0] = read_arry[i];
  84   2          for(j=i-1; read_arry[0]<read_arry[j]; j--)
  85   2          {
  86   3              read_arry[j+1] = read_arry[j];
  87   3          }
  88   2          read_arry[j+1] = read_arry[0];
  89   2        }
  90   1        readdata = read_arry[3]; /*  Midle Data to Retrun */
  91   1      /******************************************************************************/
  92   1        return readdata;
  93   1      }
  94          
  95          
  96          /************************ (C) COPYRIGHT YUJIN *****END OF FILE*****************/
  97          
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    176    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
