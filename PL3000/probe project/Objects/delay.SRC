; .\Objects\delay.SRC generated from: User\delay.c
; COMPILER INVOKED BY:
;        C:\Keil_v5\C51\BIN\C51.EXE User\delay.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Option File) DEBUG OBJECTEXTEND PRINT(.\Listings\delay.lst) TABS(2) SRC(.\Objects\delay.SRC)

$NOMOD51

NAME	DELAY

PW1YL	DATA	0ACH
TB80	BIT	098H.3
T2I0	BIT	0C8H.0
CCH1	DATA	0C3H
P0	DATA	080H
T2I1	BIT	0C8H.1
CCH2	DATA	0C5H
P1	DATA	090H
CCH3	DATA	0C7H
P2	DATA	0A0H
SM20	BIT	098H.5
AC	BIT	0D0H.6
CCL1	DATA	0C2H
EI2C	BIT	0B8H.0
SPCON	DATA	0E2H
CCL2	DATA	0C4H
PEROM	DATA	095H
BD	BIT	0D8H.7
CCL3	DATA	0C6H
T2R0	BIT	0C8H.3
T2R1	BIT	0C8H.4
SPSTA	DATA	0E1H
IEN0	DATA	0A8H
IEN1	DATA	0B8H
IEN2	DATA	09AH
IEN4	DATA	0D1H
P0OC	DATA	0E4H
I3FR	BIT	0C8H.6
REN0	BIT	098H.4
I2CADR	DATA	0DBH
S0CON2	DATA	0D8H
T2CM	BIT	0C8H.2
I2CDAT	DATA	0DAH
CCEN	DATA	0C1H
PW1A	DATA	0BDH
PW1B	DATA	0AEH
CY	BIT	0D0H.7
PW1D	DATA	0BBH
I2CCON	DATA	0DCH
CRCH	DATA	0CBH
SP	DATA	081H
OV	BIT	0D0H.2
CRCL	DATA	0CAH
PW1M	DATA	0ABH
P0UR	DATA	0F1H
I2CSTA	DATA	0DDH
P1UR	DATA	0F2H
P2UR	DATA	0F3H
T2PS	BIT	0C8H.7
IRCON2	DATA	0BFH
CLKCMD	DATA	0E6H
S0RELH	DATA	0BAH
P00	BIT	080H.0
P10	BIT	090H.0
PCON	DATA	087H
P01	BIT	080H.1
ESPI	BIT	0B8H.1
PW1Y	DATA	0ACH
P20	BIT	0A0H.0
P11	BIT	090H.1
P02	BIT	080H.2
P21	BIT	0A0H.1
P12	BIT	090H.2
P03	BIT	080H.3
S0RELL	DATA	0AAH
P13	BIT	090H.3
P04	BIT	080H.4
P14	BIT	090H.4
TMOD	DATA	089H
TCON	DATA	088H
P05	BIT	080H.5
P15	BIT	090H.5
P06	BIT	080H.6
P16	BIT	090H.6
P07	BIT	080H.7
P17	BIT	090H.7
GF1	BIT	0C8H.5
IE0	BIT	088H.1
ET2C0	BIT	0B8H.2
IE1	BIT	088H.3
CLKSEL	DATA	0E5H
TF2C0	BIT	0C0H.2
ET2C1	BIT	0B8H.3
B	DATA	0F0H
TF2C1	BIT	0C0H.3
ET2C2	BIT	0B8H.4
TF2C2	BIT	0C0H.4
ET2C3	BIT	0B8H.5
WDTR	DATA	086H
TF2C3	BIT	0C0H.5
ACC	DATA	0E0H
ADB	DATA	0D3H
SMBSEL	DATA	0DEH
ES0	BIT	0A8H.4
IP0	DATA	0A9H
ET0	BIT	0A8H.1
IP1	DATA	0B9H
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
RI0	BIT	098H.0
TF1	BIT	088H.7
TF2	BIT	0C0H.6
TH0	DATA	08CH
P0M	DATA	0F9H
SRST	DATA	0F7H
EX0	BIT	0A8H.0
TI0	BIT	098H.1
PEROMH	DATA	096H
TH1	DATA	08DH
P1M	DATA	0FAH
TH2	DATA	0CDH
P2M	DATA	0FBH
SMBDST	DATA	0DFH
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
PEROML	DATA	095H
TL1	DATA	08BH
ADM	DATA	0D2H
TL2	DATA	0CCH
EAL	BIT	0A8H.7
RS0	BIT	0D0H.3
RS1	BIT	0D0H.4
TR0	BIT	088H.4
ADR	DATA	0D4H
DPC	DATA	093H
TR1	BIT	088H.6
P1W	DATA	091H
ADT	DATA	0D9H
DPH	DATA	083H
DPL	DATA	082H
P0CON	DATA	09DH
S0BUF	DATA	099H
P1CON	DATA	0D6H
PW1BH	DATA	0AFH
P2CON	DATA	09EH
PW1CH	DATA	0BEH
S0CON	DATA	098H
TCON0	DATA	0E7H
PW1DH	DATA	0BCH
PEDGE	DATA	08FH
T2CON	DATA	0C8H
PW1BL	DATA	0AEH
PW1DL	DATA	0BBH
ET2RL	BIT	0B8H.7
PECMD	DATA	094H
PFLAG	DATA	0FFH
TF2RL	BIT	0C0H.7
CKCON	DATA	08EH
F0	BIT	0D0H.5
F1	BIT	0D0H.1
PERAM	DATA	097H
PSW	DATA	0D0H
PW1YH	DATA	0ADH
VREFH	DATA	0D5H
IRCON	DATA	0C0H
RB80	BIT	098H.2
SPDAT	DATA	0E3H
?PR?Delay_10us?DELAY SEGMENT CODE 
?PR?_Delay_N_5us?DELAY                   SEGMENT CODE 
?DT?_Delay_N_5us?DELAY                   SEGMENT DATA OVERLAYABLE 
?PR?Delay_5us?DELAY  SEGMENT CODE 
?PR?_Delay_N_10us?DELAY                  SEGMENT CODE 
?DT?_Delay_N_10us?DELAY                  SEGMENT DATA OVERLAYABLE 
?PR?_Delay_ms?DELAY  SEGMENT CODE 
?PR?Delay_Init?DELAY SEGMENT CODE 
	PUBLIC	Delay_Init
	PUBLIC	_Delay_ms
	PUBLIC	_Delay_N_10us
	PUBLIC	Delay_5us
	PUBLIC	_Delay_N_5us
	PUBLIC	Delay_10us

	RSEG  ?DT?_Delay_N_5us?DELAY
?_Delay_N_5us?BYTE:
          i?142:   DS   1

	RSEG  ?DT?_Delay_N_10us?DELAY
?_Delay_N_10us?BYTE:
          i?345:   DS   1
; /**
;   ******************************************************************************
;   * @file    delay.c
;   * @author  Captain.
;   * @version V1.1.0
;   * @date    2017-6-22
;   * @brief   This file implement delay ms and delay us functions. 
;    *****************************************************************************
;   * @attention
;   *
;   * <h2><center>&copy; COPYRIGHT 2017 YUJIN</center></h2>
;   *
;   ******************************************************************************
;   */
; 
; /* Includes ------------------------------------------------------------------*/
; #include "delay.h"
; 
; /* Public Functions ----------------------------------------------------------*/
; 
; /*
; ********************************************************************************
; *                                       DELAY US FUNCTIONS
; *
; * Description: This function Delay N us.
; *
; * Arguments  : Number of Delay times.
; *
; * Note(s)    : none.
; ********************************************************************************
; */
; 
; void Delay_10us(void)

	RSEG  ?PR?Delay_10us?DELAY
Delay_10us:
	USING	0
			; SOURCE LINE # 33
; { 
			; SOURCE LINE # 34
; 	char i=2;
			; SOURCE LINE # 35
;---- Variable 'i?040' assigned to Register 'R7' ----
	MOV  	R7,#02H
?C0001:
; 	while(i--)
			; SOURCE LINE # 36
	MOV  	R6,AR7
	DEC  	R7
	MOV  	A,R6
	JZ   	?C0003
; 	{
			; SOURCE LINE # 37
; 		_nop_();
			; SOURCE LINE # 38
	NOP  	
; 		_nop_();
			; SOURCE LINE # 39
	NOP  	
; 	  _nop_();
			; SOURCE LINE # 40
	NOP  	
; 		_nop_();
			; SOURCE LINE # 41
	NOP  	
;   }
			; SOURCE LINE # 42
	SJMP 	?C0001
; }
			; SOURCE LINE # 43
?C0003:
	RET  	
; END OF Delay_10us

; 
; void Delay_N_5us(uint8_t N)

	RSEG  ?PR?_Delay_N_5us?DELAY
_Delay_N_5us:
	USING	0
			; SOURCE LINE # 45
;---- Variable 'N?141' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 46
?C0004:
; 	while(N--)
			; SOURCE LINE # 47
	MOV  	R6,AR7
	DEC  	R7
	MOV  	A,R6
	JZ   	?C0008
; 	{
			; SOURCE LINE # 48
; 	 char i=0;
			; SOURCE LINE # 49
	CLR  	A
	MOV  	i?142,A
?C0006:
; 	 while(i--);
			; SOURCE LINE # 50
	MOV  	R6,i?142
	DEC  	i?142
	MOV  	A,R6
	JZ   	?C0004
	SJMP 	?C0006
;   }
; }
			; SOURCE LINE # 52
?C0008:
	RET  	
; END OF _Delay_N_5us

; 
; void Delay_5us(void)

	RSEG  ?PR?Delay_5us?DELAY
Delay_5us:
	USING	0
			; SOURCE LINE # 54
; { 
			; SOURCE LINE # 55
; 	char i=0;
			; SOURCE LINE # 56
;---- Variable 'i?243' assigned to Register 'R7' ----
	CLR  	A
	MOV  	R7,A
?C0009:
; 	while(i--);
			; SOURCE LINE # 57
	MOV  	R6,AR7
	DEC  	R7
	MOV  	A,R6
	JNZ  	?C0009
?C0010:
; 	_nop_();
			; SOURCE LINE # 58
	NOP  	
; 	_nop_();
			; SOURCE LINE # 59
	NOP  	
; 	_nop_();
			; SOURCE LINE # 60
	NOP  	
; 	_nop_();
			; SOURCE LINE # 61
	NOP  	
; 	_nop_();
			; SOURCE LINE # 62
	NOP  	
; }
			; SOURCE LINE # 63
	RET  	
; END OF Delay_5us

; 
; void Delay_N_10us(uint8_t N)

	RSEG  ?PR?_Delay_N_10us?DELAY
_Delay_N_10us:
	USING	0
			; SOURCE LINE # 65
;---- Variable 'N?344' assigned to Register 'R7' ----
; {
			; SOURCE LINE # 66
?C0012:
; 	while(N--)
			; SOURCE LINE # 67
	MOV  	R6,AR7
	DEC  	R7
	MOV  	A,R6
	JZ   	?C0016
; 	{
			; SOURCE LINE # 68
; 	 char i=2;
			; SOURCE LINE # 69
	MOV  	i?345,#02H
?C0014:
; 	 while(i--)
			; SOURCE LINE # 70
	MOV  	R6,i?345
	DEC  	i?345
	MOV  	A,R6
	JZ   	?C0015
; 	 {
			; SOURCE LINE # 71
; 		 _nop_();
			; SOURCE LINE # 72
	NOP  	
; 	 }
			; SOURCE LINE # 73
	SJMP 	?C0014
?C0015:
; 	 _nop_();
			; SOURCE LINE # 74
	NOP  	
;  }
			; SOURCE LINE # 75
	SJMP 	?C0012
; }
			; SOURCE LINE # 76
?C0016:
	RET  	
; END OF _Delay_N_10us

; 
; /*
; ********************************************************************************
; *                                       DELAY MS FUNCTIONS
; *
; * Description: This function Delay N ms.
; *
; * Arguments  : Number of Delay times.
; *
; * Note(s)    : none.
; ********************************************************************************
; */
; void Delay_ms(uint16_t N)

	RSEG  ?PR?_Delay_ms?DELAY
_Delay_ms:
	USING	0
			; SOURCE LINE # 89
;---- Variable 'N?446' assigned to Register 'R6/R7' ----
; {
			; SOURCE LINE # 90
?C0017:
;   while(N--)
			; SOURCE LINE # 91
	MOV  	A,R7
	DEC  	R7
	MOV  	R4,AR6
	JNZ  	?C0023
	DEC  	R6
?C0023:
	ORL  	A,R4
	JZ   	?C0018
;   {
			; SOURCE LINE # 92
;     TH0 = 0x83;     /* 1 ms */
			; SOURCE LINE # 93
	MOV  	TH0,#083H
; 		TL0 = 0x00;
			; SOURCE LINE # 94
	CLR  	A
	MOV  	TL0,A
; 		TR0 = 1;  //enable timer;
			; SOURCE LINE # 95
	SETB 	TR0
?C0019:
;     while(!(TF0));
			; SOURCE LINE # 96
	JNB  	TF0,?C0019
?C0020:
; 		TF0 = 0;
			; SOURCE LINE # 97
	CLR  	TF0
; 	//	TR0 = 0;  //disable timer;
;   }
			; SOURCE LINE # 99
	SJMP 	?C0017
?C0018:
; 	TR0 = 0;  //disable timer;
			; SOURCE LINE # 100
	CLR  	TR0
; }
			; SOURCE LINE # 101
	RET  	
; END OF _Delay_ms

; 
; void Delay_Init(void)

	RSEG  ?PR?Delay_Init?DELAY
Delay_Init:
			; SOURCE LINE # 103
; {
			; SOURCE LINE # 104
; 	//IEN0  //disable Interrupt
; 	TH0 = 0x00;
			; SOURCE LINE # 106
	CLR  	A
	MOV  	TH0,A
; 	TL0 = 0x00;
			; SOURCE LINE # 107
	MOV  	TL0,A
; 	TMOD |= 0x05;  //Ft0 = Fosc, 16 Bit up;
			; SOURCE LINE # 108
	ORL  	TMOD,#05H
; 	TCON0 |= 0x70; //Ft0 = 32MHz;
			; SOURCE LINE # 109
	ORL  	TCON0,#070H
; 	TF0 = 0;   //clean flag;
			; SOURCE LINE # 110
	CLR  	TF0
; 	TR0 = 0;  //disable timer;
			; SOURCE LINE # 111
	CLR  	TR0
; }
			; SOURCE LINE # 112
	RET  	
; END OF Delay_Init

	END
