C51 COMPILER V9.56.0.0   DELAY                                                             05/22/2018 18:06:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DELAY
OBJECT MODULE PLACED IN .\Objects\delay.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\delay.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Option File) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\delay.lst) TABS(2) OBJECT(.\Objects\delay.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file    delay.c
   4            * @author  Captain.
   5            * @version V1.1.0
   6            * @date    2017-6-22
   7            * @brief   This file implement delay ms and delay us functions. 
   8             *****************************************************************************
   9            * @attention
  10            *
  11            * <h2><center>&copy; COPYRIGHT 2017 YUJIN</center></h2>
  12            *
  13            ******************************************************************************
  14            */
  15          
  16          /* Includes ------------------------------------------------------------------*/
  17          #include "delay.h"
  18          
  19          uint8_t R_W_flag = 1;
  20          /* Public Functions ----------------------------------------------------------*/
  21          
  22          /*
  23          ********************************************************************************
  24          *                                       DELAY US FUNCTIONS
  25          *
  26          * Description: This function Delay N us.
  27          *
  28          * Arguments  : Number of Delay times.
  29          *
  30          * Note(s)    : none.
  31          ********************************************************************************
  32          */
  33          /*
  34          void Delay_10us(void)
  35          { 
  36            char i=2;
  37            while(i--)
  38            {
  39              _nop_();
  40              _nop_();
  41              _nop_();
  42              _nop_();
  43            }
  44          }
  45          */
  46          void Delay_N_5us(uint8_t N)
  47          {
  48   1        while(N--)
  49   1        {
  50   2         char i=0;
  51   2         while(i--);
  52   2        }
  53   1      }
  54          /*
C51 COMPILER V9.56.0.0   DELAY                                                             05/22/2018 18:06:45 PAGE 2   

  55          void Delay_5us(void)
  56          { 
  57            char i=0;
  58            while(i--);
  59            _nop_();
  60            _nop_();
  61            _nop_();
  62            _nop_();
  63            _nop_();
  64          }
  65          */
  66          
  67          void Delay_N_10us(uint8_t N)
  68          {
  69   1        while(N--)
  70   1        {
  71   2         char i=2;
  72   2         while(i--)
  73   2         {
  74   3           _nop_();
  75   3         }
  76   2         _nop_();
  77   2       }
  78   1      }
  79          
  80          void Delay_Hfbit(void)
  81          {
  82   1        
  83   1          TR0 = 0; 
  84   1          TF0 = 0;
  85   1          if(R_W_flag == 1)
  86   1          {
  87   2            TH0 = 0xFC; }
  88   1          else{
  89   2            TH0 = 0xFD;
  90   2            }    
  91   1          TL0 = 0x00;
  92   1          TR0 = 1;  //enable timer;
  93   1          while(!(TF0));
  94   1        //  TR0 = 0;  //disable timer;
  95   1      }
  96          
  97          
  98          
  99          void Delay_Qbit(void)
 100          {
 101   1          TR0 = 0; 
 102   1          TF0 = 0;
 103   1          TH0 = 0xFE;     /* 1 ms */
 104   1          TL0 = 0xE0;   
 105   1          TR0 = 1;  //enable timer;   
 106   1          while(!(TF0));
 107   1           //disable timer;
 108   1      }
 109          
 110          void Delay_Qbit2(void)
 111          {
 112   1          TR0 = 0; 
 113   1          TF0 = 0;
 114   1          TH0 = 0xFF;     /* 1 ms */
 115   1          TL0 = 0x00;   
 116   1          TR0 = 1;  //enable timer;   
C51 COMPILER V9.56.0.0   DELAY                                                             05/22/2018 18:06:45 PAGE 3   

 117   1          while(!(TF0));
 118   1           //disable timer;
 119   1      }
 120          
 121          /*
 122          ********************************************************************************
 123          *                                       DELAY MS FUNCTIONS
 124          *
 125          * Description: This function Delay N ms.
 126          *
 127          * Arguments  : Number of Delay times.
 128          *
 129          * Note(s)    : none.
 130          ********************************************************************************
 131          */
 132          void Delay_ms(uint16_t N)
 133          {
 134   1        while(N--)
 135   1        {
 136   2          TH0 = 0x83;     /* 1 ms */
 137   2          TL0 = 0x00;
 138   2          TR0 = 1;  //enable timer;
 139   2          while(!(TF0));
 140   2          TF0 = 0;
 141   2        //  TR0 = 0;  //disable timer;
 142   2        }
 143   1        TR0 = 0;  //disable timer;
 144   1      }
 145          
 146          
 147          void Delay_Init(void)
 148          {
 149   1        //IEN0  //disable Interrupt
 150   1        TH0 = 0x00;
 151   1        TL0 = 0x00;
 152   1        TMOD |= 0x05;  //Ft0 = Fosc, 16 Bit up;
 153   1        TCON0 |= 0x70; //Ft0 = 32MHz;
 154   1        TF0 = 0;   //clean flag;
 155   1        TR0 = 0;  //disable timer;
 156   1      }
 157          
 158          /************************ (C) COPYRIGHT YUJIN *****END OF FILE*****************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    144    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
