C51 COMPILER V9.56.0.0   ERROR_CHECK                                                       05/29/2018 14:32:24 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE ERROR_CHECK
OBJECT MODULE PLACED IN .\Objects\Error_Check.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\Error_Check.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Option File)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\Error_Check.lst) TABS(2) OBJECT(.\Objects\Error_Check.obj)

line level    source

   1          #include "Error_Check.h"
   2          #include "ADC.H"
   3          #include "Error_Check.h"
   4          #include "EEPROM.h"
   5          #include "delay.h"
   6          
   7          uint8_t Fan_Error_Flag = 0;
   8          uint8_t Cartridge_Error_Flag = 0;
   9          uint8_t Error_Flag = 0;
  10          uint8_t Lamp_Type = 0;
  11          
  12          extern uint8_t EEPROM_Error;
  13          
  14          void Fan_Error_Check(void)
  15          {
  16   1        uint16_t readdata;
  17   1        readdata = ADC_Read_Channel_Fun(ADC_FAN_CHANNEL);
  18   1        if((readdata < FAN_OPEN_ERROR_THR) || (readdata > FAN_SHORT_ERROR_THR))
  19   1        {
  20   2          
  21   2          Delay_N_5us(10);
  22   2          readdata = ADC_Read_Channel_Fun(ADC_FAN_CHANNEL);
  23   2          if((readdata < FAN_OPEN_ERROR_THR) || (readdata > FAN_SHORT_ERROR_THR))
  24   2          {
  25   3            Fan_Error_Flag = 1;
  26   3          }
  27   2        }else{
  28   2          Fan_Error_Flag = 0;
  29   2        }
  30   1      }
  31          /*
  32          void Cartridge_Error_Check(void)
  33          {
  34            uint16_t readdata;
  35            readdata = ADC_Read_Channel_Fun(ADC_CARTRIDG_CHANNEL);
  36            if(readdata < CARTRIDGE_ERROR_THR)
  37            {
  38              Delay_N_5us(10);
  39              readdata = ADC_Read_Channel_Fun(ADC_CARTRIDG_CHANNEL);
  40              if(readdata < CARTRIDGE_ERROR_THR)
  41              {
  42                Cartridge_Error_Flag = 1;
  43              }
  44            }else{
  45              Cartridge_Error_Flag = 0;
  46            }
  47          }
  48          */
  49          void Cartridge_Type_Check(void)
  50          {
  51   1        uint16_t readdata;
  52   1        readdata = ADC_Read_Channel_Fun(ADC_CARTRIDG_CHANNEL);
  53   1        if(readdata > CARTRIDGE_TYPE_1)
  54   1        {
C51 COMPILER V9.56.0.0   ERROR_CHECK                                                       05/29/2018 14:32:24 PAGE 2   

  55   2          Lamp_Type = 1;
  56   2        }else{
  57   2          if((readdata < CARTRIDGE_TYPE_2_H) && (readdata > CARTRIDGE_TYPE_2_L))
  58   2          {
  59   3            Lamp_Type = 2;
  60   3          }
  61   2          if((readdata < CARTRIDGE_TYPE_3_H) && (readdata > CARTRIDGE_TYPE_3_L))
  62   2          {
  63   3            Lamp_Type = 3;
  64   3          }
  65   2          if((readdata < CARTRIDGE_TYPE_4_H) && (readdata > CARTRIDGE_TYPE_4_L))
  66   2          {
  67   3            Lamp_Type = 4;
  68   3          }
  69   2          if(readdata < CARTRIDGE_ERROR_THR)
  70   2        {
  71   3          Delay_N_5us(10);
  72   3          readdata = ADC_Read_Channel_Fun(ADC_CARTRIDG_CHANNEL);
  73   3          if(readdata < CARTRIDGE_ERROR_THR)
  74   3          {
  75   4            Cartridge_Error_Flag = 1;
  76   4          }
  77   3        }else{
  78   3          Cartridge_Error_Flag = 0;
  79   3        }
  80   2        }
  81   1      }
  82          
  83          void Error_Check(void)
  84          {
  85   1        Fan_Error_Check();
  86   1        Cartridge_Type_Check();
  87   1        //Cartridge_Error_Check();
  88   1        //if(Cartridge_Error_Flag || EEPROM_Error|| Fan_Error_Flag)
  89   1        if(Cartridge_Error_Flag || Fan_Error_Flag || EEPROM_Error)  
  90   1        {
  91   2          Error_Flag = 1;
  92   2        }else{
  93   2          Error_Flag = 0;
  94   2        }
  95   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    199    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
