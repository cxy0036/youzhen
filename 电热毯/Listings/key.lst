C51 COMPILER V9.56.0.0   KEY                                                               02/01/2018 16:07:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Option File) DEBUG O
                    -BJECTEXTEND PRINT(.\Listings\key.lst) TABS(2) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          #include "Flash_Control.h"
   3          #include "Error_Check.h"
   4          #include "skin_color_check.h"
   5          #include "protocol.h"
   6          #include "UART.h"
   7          #include "delay.h"
   8          
   9          volatile uint8_t Key_Read = 0;
  10          uint8_t Key_Trig = 0;
  11          uint8_t Key_Count = 0;
  12          uint8_t No_Skin_Flag = 0;
  13          uint8_t Standard_Flash_Lock = 0;
  14          uint8_t  Flash_Key_Push = 0;
  15          //uint16_t Key_Delay_Count = 0;
  16          //uint16_t Flash_Key_Delay_Count = 0;
  17          
  18          uint8_t Key_Push = 0;
  19          uint8_t Skin_Tpye5_Count = 0;
  20          uint8_t Full_Charge_Flag = 0;
  21          uint8_t Low_Lamp;
  22          uint8_t First_Push = 1;
  23          uint8_t Flash_Flag = 0;
  24          uint16_t Flash_Delay_Count = 0;
  25          //uint8_t Skin_Tpye5_Count;
  26          //uint8_t Mode_Change = 0;
  27          
  28          uint8_t Mode_Type = Standard_Mode;
  29          
  30          extern uint8_t Flash_Times_Level;
  31          extern uint8_t Low_Lamp ;
  32          extern uint8_t Skin_Tpye;
  33          
  34          extern uint8_t Lock_Flag;
  35          extern uint8_t Error_Flag;
  36          //extern uint8_t Get_Mode_Type;
  37          extern uint8_t Flash_Ready;
  38          
  39          
  40          void Key_IO_Init(void)
  41          {
  42   1        P1M &= ~0x01;   /* P10:Touch Input */ 
  43   1        P0M &= ~0x01;   /* P00:Flash SW Input */
  44   1        P1UR &= ~0x01;   /* P10:Disable Pull up */
  45   1        P0UR |= 0x01;   /* P00:enable Pull up */
  46   1      }
  47          
  48          
  49          void Key_Scan(void)
  50          {
  51   1        uint8_t temp;
  52   1        temp = P1 << 1;
  53   1        Key_Read = ((P0 & 0x01) | (temp & 0x02)) ^ 0xFF;  /* not */
  54   1        Key_Trig = Key_Read & (Key_Read ^ Key_Count);
C51 COMPILER V9.56.0.0   KEY                                                               02/01/2018 16:07:20 PAGE 2   

  55   1        Key_Count = Key_Read;
  56   1      }
  57          
  58          
  59          void Key_Process(void)
  60          {
  61   1        if(!Lock_Flag)
  62   1        {
  63   2          Key_Scan();
  64   2          if((Key_Count & TOUCH_PIN)&&(!Flash_Key_Push))
  65   2          {
  66   3            Skin_Color_Check();
  67   3            if(Key_Count & FLASH_SW_PIN)
  68   3            {
  69   4              if(Key_Trig & FLASH_SW_PIN)
  70   4              {
  71   5                Flash_Key_Push = 1;
  72   5                Standard_Flash_Lock = 1;
  73   5              }
  74   4            }
  75   3          }else{
  76   3            if(Key_Count & TOUCH_PIN) 
  77   3            {
  78   4              Skin_Color_Check(); 
  79   4            }
  80   3            else{
  81   4              Skin_Tpye = 0;
  82   4            }       
  83   3            if(!(Key_Count & FLASH_SW_PIN))
  84   3            {
  85   4              Standard_Flash_Lock = 0;
  86   4              Flash_Key_Push = 0;
  87   4            }
  88   3          }
  89   2            //Skin_Color_Check(); 
  90   2            if((!(P1&0x01))&&(Full_Charge_Flag)&&(Skin_Tpye == 5))
  91   2            {
  92   3                Skin_Color_Check(); 
  93   3                Skin_Tpye5_Count++;
  94   3                if(Skin_Tpye5_Count == 150)
  95   3                {
  96   4                  //Full_Charge_LED_TOG;
  97   4                  Skin_Tpye5_Count = 0;
  98   4                  No_Skin_Flag ^= 1;
  99   4                  //Delay_ms(200);
 100   4                }
 101   3            }else{
 102   3              No_Skin_Flag = 1;
 103   3            }
 104   2           if(Key_Count & TOUCH_PIN)  
 105   2            {
 106   3              Skin_Color_Check(); 
 107   3            }
 108   2            else{
 109   3              Skin_Tpye = 0;
 110   3            }       
 111   2          
 112   2          if(Full_Charge_Flag && (!(Error_Flag)) && (!(Low_Lamp)) && (!(Skin_Tpye == 5))) 
 113   2          {   
 114   3            switch(Mode_Type){
 115   4            case Auto_Mode : Auto_Flash();break;
 116   4            case Auto_Multi_Mode : Auto_Multi_Flash();break;
C51 COMPILER V9.56.0.0   KEY                                                               02/01/2018 16:07:20 PAGE 3   

 117   4            case Standard_Mode : Standard_Flash();break;
 118   4            case Standard_Multi_Mode : Standard_Multi_Flash();break;
 119   4            default : break;       
 120   4            }
 121   3          }
 122   2        }
 123   1      }
 124          
 125          
 126          void Auto_Flash(void)
 127          {
 128   1        uint16_t delay_count;
 129   1        if(Key_Count & TOUCH_PIN)
 130   1        {
 131   2          Skin_Color_Check();
 132   2          if(First_Push)
 133   2          {
 134   3            delay_count = 400;      
 135   3          }else{
 136   3            delay_count = 400;
 137   3          }
 138   2          Flash_Delay_Count ++;
 139   2          if(Flash_Delay_Count == delay_count)
 140   2          {     
 141   3            Flash_Delay_Count = delay_count - 1;
 142   3            Flash_Flag = 1;
 143   3            if(Flash_Ready)
 144   3            {
 145   4              First_Push = 0;
 146   4              Flash_Ready = 0;
 147   4              Flash_Flag = 0;
 148   4              Full_Charge_Flag = 0;
 149   4              Flash_Delay_Count = 0;
 150   4              Full_Charge_LED_Off;
 151   4              Flash_Control(1);                   
 152   4            }     
 153   3          }  
 154   2        }else{
 155   2          Flash_Ready = 0;
 156   2          Flash_Flag = 0;
 157   2          Skin_Tpye = 0;
 158   2          First_Push = 1;
 159   2          Flash_Delay_Count = 0;
 160   2        }
 161   1      }
 162          
 163          void Auto_Multi_Flash(void)
 164          {
 165   1        uint16_t delay_count;
 166   1        if(Key_Count & TOUCH_PIN)
 167   1        {
 168   2          Skin_Color_Check();
 169   2          if(First_Push)
 170   2          {
 171   3            delay_count = 400;      
 172   3          }else{
 173   3            delay_count = 400;
 174   3          }
 175   2          Flash_Delay_Count ++;
 176   2          if(Flash_Delay_Count == delay_count)
 177   2          {     
 178   3            Flash_Delay_Count = delay_count - 1;    
C51 COMPILER V9.56.0.0   KEY                                                               02/01/2018 16:07:20 PAGE 4   

 179   3            Flash_Flag = 1;
 180   3            if(Flash_Ready)
 181   3            {
 182   4              First_Push = 0;
 183   4              Flash_Ready = 0;
 184   4              Flash_Flag = 0;
 185   4              Full_Charge_Flag = 0;
 186   4              Flash_Delay_Count = 0;
 187   4              Full_Charge_LED_Off;
 188   4              Flash_Control(4);   
 189   4            }
 190   3          }
 191   2        }else{
 192   2          Flash_Ready = 0;
 193   2          Flash_Flag = 0;
 194   2          Skin_Tpye = 0;
 195   2          First_Push = 1;
 196   2          Flash_Delay_Count = 0;
 197   2        }
 198   1      }
 199          
 200          void Standard_Flash(void)
 201          {
 202   1        if(Standard_Flash_Lock)
 203   1        {
 204   2          Flash_Flag = 1;
 205   2          if(Flash_Ready)
 206   2          {
 207   3            Standard_Flash_Lock = 0;
 208   3            Flash_Ready = 0;
 209   3            Flash_Flag = 0;
 210   3            Full_Charge_Flag = 0;
 211   3            Full_Charge_LED_Off;
 212   3            Flash_Control(1);         
 213   3          }
 214   2        }
 215   1      }
 216          
 217          
 218          void Standard_Multi_Flash(void)
 219          {
 220   1        if(Standard_Flash_Lock)
 221   1        {
 222   2          Flash_Flag = 1;
 223   2          if(Flash_Ready)
 224   2          {
 225   3            Standard_Flash_Lock = 0;
 226   3            Flash_Ready = 0;
 227   3            Flash_Flag = 0;
 228   3            Full_Charge_Flag = 0;
 229   3            Full_Charge_LED_Off;
 230   3            Flash_Control(4);                   
 231   3          }
 232   2        }
 233   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    435    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   KEY                                                               02/01/2018 16:07:20 PAGE 5   

   DATA SIZE        =     15       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
